import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    if (project == rootProject) {
        repositories {
            google()
            mavenCentral()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:7.0.4'
        }
    }
}

apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 31)
    buildToolsVersion safeExtGet('buildToolsVersion', '31.0.0')
    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 23)
        if (System.properties['os.arch'] == "aarch64") {
            // For M1 Users we need to use the NDK 24 which added support for aarch64
            ndkVersion safeExtGet('ndkVersion', '24.0.8215888')
        } else {
            // Otherwise we default to the side-by-side NDK version from AGP.
            ndkVersion safeExtGet('ndkVersion', '21.4.7075529')
        }
        targetSdkVersion safeExtGet('targetSdkVersion', 31)
        versionCode 3
        versionName "0.5.5"
    }
    buildTypes {
        release {
            minifyEnabled true
        }
    }
    lintOptions {
        disable 'GradleCompatible'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }
    maven {
        // Android JSC is installed from npm
        url "$rootDir/../node_modules/jsc-android/dist"
    }
    google()
}

dependencies {
    implementation 'com.facebook.react:react-native:+'  // From node_modules
    implementation 'org.nanohttpd:nanohttpd:2.3.1'
    implementation 'org.nanohttpd:nanohttpd-webserver:2.3.1'
}